{
	"name": "df_Join_Orders_and_Customers",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_sql_db_customers",
						"type": "DatasetReference"
					},
					"name": "CustomersStream"
				},
				{
					"dataset": {
						"referenceName": "ds_sql_db_orders",
						"type": "DatasetReference"
					},
					"name": "OrdersStream"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_adls_orders_customers",
						"type": "DatasetReference"
					},
					"name": "OrdersCustomers"
				}
			],
			"transformations": [
				{
					"name": "OrdersInnerJoinCustomer"
				},
				{
					"name": "dropCols"
				},
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as integer,",
				"          NameStyle as boolean,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          PasswordHash as string,",
				"          PasswordSalt as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> CustomersStream",
				"source(output(",
				"          SalesOrderID as integer,",
				"          RevisionNumber as integer,",
				"          OrderDate as timestamp,",
				"          DueDate as timestamp,",
				"          ShipDate as timestamp,",
				"          Status as integer,",
				"          OnlineOrderFlag as boolean,",
				"          SalesOrderNumber as string,",
				"          PurchaseOrderNumber as string,",
				"          AccountNumber as string,",
				"          CustomerID as integer,",
				"          ShipToAddressID as integer,",
				"          BillToAddressID as integer,",
				"          ShipMethod as string,",
				"          CreditCardApprovalCode as string,",
				"          SubTotal as decimal(19,4),",
				"          TaxAmt as decimal(19,4),",
				"          Freight as decimal(19,4),",
				"          TotalDue as decimal(19,4),",
				"          Comment as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> OrdersStream",
				"CustomersStream, OrdersStream join(CustomersStream@CustomerID == OrdersStream@CustomerID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> OrdersInnerJoinCustomer",
				"OrdersInnerJoinCustomer select(mapColumn(",
				"          CustomerID = CustomersStream@CustomerID,",
				"          NameStyle,",
				"          Title,",
				"          FirstName,",
				"          MiddleName,",
				"          LastName,",
				"          Suffix,",
				"          CompanyName,",
				"          SalesPerson,",
				"          EmailAddress,",
				"          Phone,",
				"          PasswordHash,",
				"          PasswordSalt,",
				"          rowguid = CustomersStream@rowguid,",
				"          ModifiedDate = CustomersStream@ModifiedDate,",
				"          SalesOrderID,",
				"          RevisionNumber,",
				"          OrderDate,",
				"          DueDate,",
				"          ShipDate,",
				"          Status,",
				"          OnlineOrderFlag,",
				"          SalesOrderNumber,",
				"          PurchaseOrderNumber,",
				"          AccountNumber,",
				"          CustomerID = OrdersStream@CustomerID,",
				"          BillToAddressID,",
				"          ShipMethod,",
				"          CreditCardApprovalCode,",
				"          SubTotal,",
				"          TaxAmt,",
				"          Freight,",
				"          TotalDue,",
				"          Comment,",
				"          rowguid = OrdersStream@rowguid,",
				"          ModifiedDate = OrdersStream@ModifiedDate",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> dropCols",
				"dropCols aggregate(groupBy(CustomerID,",
				"          OrderDate),",
				"     SubTotal = sum(SubTotal)) ~> aggregate1",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> OrdersCustomers"
			]
		}
	}
}